---
- name: Run Grafana container
  docker_container:
    name: grafana
    image: grafana/grafana
    network_mode: host
    detach: yes
    state: started
    restart_policy: always
    #restart_retries: 128 #conflicts with "always"
    env:
      GF_HTTP_ADDR: 0.0.0.0

- name: Wait for Grafana to come up
  wait_for: port=3000 delay=5 timeout=60

- name: Get Grafana datasources
  uri:
    url: http://localhost:3000/api/datasources
    method: GET
    user: admin
    password: admin
    force_basic_auth: yes
    status_code: 200
  register: datasources

- name: Count the Grafana datasources
  set_fact:
    matched_datasources: "{{ datasources.json | selectattr('name', 'equalto', 'InfluxDB') | list | length }}"

- name: Register InfluxDB datasource
  uri:
    url: http://localhost:3000/api/datasources
    method: POST
    user: admin
    password: admin
    body: "{{ lookup('file','register_datasource.json') }}"
    force_basic_auth: yes
    status_code: 200
    HEADER_Content-type: application/json
  when: matched_datasources != "1"

- name: Load Executive Monitoring dashboard
  uri:
    url: http://localhost:3000/api/dashboards/db
    method: POST
    user: admin
    password: admin
    body: "{{ lookup('file','executive.json') }}"
    force_basic_auth: yes
    status_code: 200
    HEADER_Content-type: application/json

- name: Load Onyx ZooKeeper Monitoring dashboard
  uri:
    url: http://localhost:3000/api/dashboards/db
    method: POST
    user: admin
    password: admin
    body: "{{ lookup('file','onyx_zookeeper_monitoring.json') }}"
    force_basic_auth: yes
    status_code: 200
    HEADER_Content-type: application/json

- name: Load Onyx Peer Monitoring dashboard
  uri:
    url: http://localhost:3000/api/dashboards/db
    method: POST
    user: admin
    password: admin
    body: "{{ lookup('file','onyx_peer_monitoring.json') }}"
    force_basic_auth: yes
    status_code: 200
    HEADER_Content-type: application/json

- name: Load Linear Input dashboard
  uri:
    url: http://localhost:3000/api/dashboards/db
    method: POST
    user: admin
    password: admin
    body: "{{ lookup('file','linear_input.json') }}"
    force_basic_auth: yes
    status_code: 200
    HEADER_Content-type: application/json

- name: Load Linear Inc1 dashboard
  uri:
    url: http://localhost:3000/api/dashboards/db
    method: POST
    user: admin
    password: admin
    body: "{{ lookup('file','linear_inc1.json') }}"
    force_basic_auth: yes
    status_code: 200
    HEADER_Content-type: application/json

- name: Load Linear Inc2 dashboard
  uri:
    url: http://localhost:3000/api/dashboards/db
    method: POST
    user: admin
    password: admin
    body: "{{ lookup('file','linear_inc2.json') }}"
    force_basic_auth: yes
    status_code: 200
    HEADER_Content-type: application/json

- name: Load Linear Inc3 dashboard
  uri:
    url: http://localhost:3000/api/dashboards/db
    method: POST
    user: admin
    password: admin
    body: "{{ lookup('file','linear_inc3.json') }}"
    force_basic_auth: yes
    status_code: 200
    HEADER_Content-type: application/json

- name: Load Linear Inc4 dashboard
  uri:
    url: http://localhost:3000/api/dashboards/db
    method: POST
    user: admin
    password: admin
    body: "{{ lookup('file','linear_inc4.json') }}"
    force_basic_auth: yes
    status_code: 200
    HEADER_Content-type: application/json

- name: Load Linear No Op dashboard
  uri:
    url: http://localhost:3000/api/dashboards/db
    method: POST
    user: admin
    password: admin
    body: "{{ lookup('file','linear_no_op.json') }}"
    force_basic_auth: yes
    status_code: 200
    HEADER_Content-type: application/json
